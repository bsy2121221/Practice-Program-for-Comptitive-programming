#include <bits/stdc++.h>
using namespace std;
#define Row 4
#define Col 4

int dRow[]={-1,0,1,0};
int dCol[]={0,1,0,-1};

bool isValid(bool vis[][Col],int row,int col){
    if(row<0 || col<0 || row>=Row || col>=Col){
        return false;
    }
    if(vis[row][col])
    return false;
    
    return true;
}

void BFS(int arr[][Col],bool vis[][Col],int row, int col){
    queue<pair<int,int>> q ;
     
     q.push({row,col});
     vis[row][col]=true;
    
     
     while(!q.empty()){
         pair<int,int>p=q.front();
         int x=p.first;
         int y=p.second;
         
         cout<<arr[x][y]<<" ";
         
         q.pop();
         for(int i=0;i<4;i++){
             int dx=x+dRow[i];
             int dy=y+dCol[i];
             if(isValid(vis,dx,dy)){
                 q.push({dx,dy});
                 vis[dx][dy]=true;
             }
         }
     }
}



int main() {
    int arr[4][4]={{1,2,3,4},
                    {5,6,7,8},
                    {9,10,11,12},
                    {13,14,15,16}};
        bool vis[Row][Col];
        memset(vis,false,sizeof(vis));
        BFS(arr,vis,0,0);
    return 0;
	
}